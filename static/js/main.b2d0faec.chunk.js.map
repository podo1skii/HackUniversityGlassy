{"version":3,"sources":["panels/Profile.js","App.js","index.js"],"names":["Profile","platform","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activePanel","city","gameCount","team","onChangePanel","bind","assertThisInitialized","e","setState","currentTarget","dataset","panel","react_default","a","createElement","vkui","id","fetchedUser","Fragment","before","photo_200","src","description","title","concat","first_name","last_name","expandable","onClick","data-panel","_24_place_default","flash_default","React","Component","App","activeStory","locationUser","onStoryChange","story","_this2","connect","subscribe","detail","type","data","send","tabbar","selected","data-story","favorite_default","place_default","user_default","panels_Profile","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2d0faec.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Panel, PanelHeader, HeaderButton, Group, List, ListItem, Cell, Avatar, platform, IOS, Button, Div, Footer } from '@vkontakte/vkui';\n\n\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\nimport Icon24Message from '@vkontakte/icons/dist/24/message';\n\nconst osname = platform();\n\nclass Profile extends React.Component {\n    constructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n            activePanel: 'profile',\n            city: 'Санкт-Петербург',\n            gameCount: '',\n            team: ''\n\t\t};\n        this.onChangePanel = this.onChangePanel.bind(this);\n\t}\n\n    onChangePanel(e) {\n        this.setState({ activePanel: e.currentTarget.dataset.panel });\n    }\n\n\tcomponentDidMount() {\n\t}\n\n    render() {\n        return (\n            <View id=\"profile\" activePanel={this.state.activePanel}>\n                <Panel id=\"profile\">\n                    <PanelHeader>Профиль</PanelHeader>\n                    {this.props.fetchedUser &&\n                    <React.Fragment>\n                        <Group>\n                            <ListItem\n                                before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\n                                description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\n                            >\n                                {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\n                            </ListItem>\n                        </Group>\n                        <Group>\n                            <List>\n                                <Cell expandable\n                                    onClick={this.onChangePanel}\n                                    data-panel=\"chooseСity\"\n                                    before={<Icon24Place />}\n                                >\n                                    {this.state.city}\n                                </Cell>\n                            </List>\n                        </Group>\n                        <Group title=\"Количество игр\">\n                            <List>\n                                <Cell\n                                    before={<Icon24Flash />}\n                                >\n                                    {this.state.gameCount}\n                                </Cell>\n                            </List>\n                        </Group>\n                    </React.Fragment>}\n                </Panel>\n            </View>\n        );\n    }\n}\n\n\nexport default Profile;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Epic, Tabbar, TabbarItem } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Icon28User from '@vkontakte/icons/dist/28/user';\nimport Icon28Place from '@vkontakte/icons/dist/28/place';\nimport Icon28Favorite from '@vkontakte/icons/dist/28/favorite';\n\n\nimport Profile from './panels/Profile';\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveStory: 'events',\n\t\t\tfetchedUser: null,\n\t\t\tlocationUser: null\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\n\tonStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// console.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGeodataResult':\n\t\t\t\t\tthis.setState({ locationUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// console.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetGeodata', {});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t<Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'events'}\n\t\t\t\t\t\tdata-story=\"events\"\n\t\t\t\t\t><Icon28Favorite /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'map'}\n\t\t\t\t\t\tdata-story=\"map\"\n\t\t\t\t\t><Icon28Place /></TabbarItem>\n\t\t\t\t  \t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'profile'}\n\t\t\t\t\t\tdata-story=\"profile\"\n\t\t\t\t  \t><Icon28User /></TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t\t}>\n\t\t\t\t<Profile id=\"profile\" fetchedUser={this.state.fetchedUser} />\n\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}